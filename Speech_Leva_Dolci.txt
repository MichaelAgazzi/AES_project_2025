This is the block diagram that we configured for our network. We have primary, secondary, and tertiary control. Control signal are normalized to deal with unitary quantities, as we can see in fact actuator is split into a dynamic unitary block representing its dynamics and nominal power gain block. This is done for each actuator, also considering saturation on each one. We have the power demand on the right, which is entering in the system as a disturbance, and the load at the end. Notice that the system is linearized around equilibrium of the angular velocity omega.

We defined the power demand of the network following the indications in the project file getting to the definition of three power demands, A, B, and C, respecting all the constraints. Based on this and the optimization that has been performed, we defined for each power demand the corresponding actuator's power request, which based on what we said before has to be unitary, and we can see, for example, for the A demand, we have this configuration of the generator request that will be the output of our tertiary control. 

Tertiary control has been done by implementing a modelica block, which outputs the three optimal unitary powers according to the time of the simulation, this is the block and its code. Basically we created a general block and then created specific blocks for each sequence using different parameters for Powers requirements according to the sequence. 

This leads to following tertiary control input into our system, in this case referred to sequence A. We can observe it's respecting the sequence previously mentioned, for example, in P1, red line, output is 0.6 then drop to 0 for 2 iterations as planned, so for all the times we have the optimal sequence of generation evaluated before. Actually, we also implemented a prefilter because we know the dynamic of the actuator and we wanted the tertiary control to act faster to better anticipate the demand. Prefilter has as zero the pole of the actuator and a pole settled faster than actuator one, hypotizing that slew rate of generator can respect it. Also, we anticipated the output of the tertiary by 10 seconds seen empirically that that leads to a better response of the system. 

This is the final cumulative response of each generator, which, as we can see, respect the demand that we define in this case with respect to A sequence. 

This is the Settling time when disturbance of the power demands change of 30 megawatts, it respects the boundary of 600 seconds as a settling time. Notice the current graph display normalized frequency because as we mentioned above we are working with normalized values.  Given the Nadir requirements settled by local and European autorithies as 49.2 hertz, we designed system to ensure it, in fact our frequency response doesn't exceed plotted lower boundary, noticing that here we had to multiply normalized freq by 50 Hz to get it's real value.

So the network seems to behave good. Of course, the prediction cannot be precise, so we modeled also an additional disturbance, which in our case has been done using a mean of 0 and a standard deviation of 0.3 megawatts, according to datas we found in Terna reports, in which average displacement between the prediction and demand is around 0.01 of the prediction, therefore we modeled it and we injected it as an additive disturbance using also a filter because noise block has a discrete ouput which varies in a step manner. 

Therefore, after doing that, this is the final response of the system, as we can see still respects the Nadir except certain spikes given by additional noise. This were our final consideration on the project, thanks for the attention and for the attention!